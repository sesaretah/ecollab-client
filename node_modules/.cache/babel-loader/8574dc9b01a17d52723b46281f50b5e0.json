{"ast":null,"code":"import dispatcher from \"../dispatcher\";\nimport axios, { put } from 'axios';\nimport { conf } from '../conf';\nconst server = conf.server; //const server='/v1';\n//const server='http://95.156.255.115/api';\n\nexport function getList(model, page = 1, params = {}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/' + model + '?page=' + page + '&' + queryString, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"bearer \" + token\n    }\n  }).then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getMultipleList(model, page = 1, params = {}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/' + model + '?page=' + page + '&' + queryString, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"bearer \" + token\n    }\n  }).then(function (response) {\n    dispatcher.dispatch({\n      type: \"MULTIPLE_LIST_MODEL_SUCCESS\",\n      list: response.data\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function fileUpload(model, id, file, token) {\n  const url = server + '/' + model;\n  const formData = new FormData();\n  formData.append('upload[attached_document]', file); //formData.append('profile[id]',id)\n\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data',\n      'Authorization': \"bearer \" + token\n    }\n  };\n  axios.post(url, formData, config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getInstance(model, id, token, page = 1) {\n  axios.get(server + '/' + model + '/' + id + '?page=' + page, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"bearer \" + token\n    }\n  }).then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function removeInstance(model, params = {}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/' + model + '/delete?' + queryString, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"bearer \" + token\n    }\n  }).then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function setInstance(model, data, token) {\n  axios.post(server + '/' + model + '/', data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"bearer \" + token\n    }\n  }).then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data\n    });\n  }).catch(function (error) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_FAILURE\",\n      instance: error.reason\n    });\n    console.log(error);\n  });\n}\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/' + model + '/' + data.id, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"bearer \" + token\n    }\n  }).then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}","map":{"version":3,"sources":["/Users/hosseinshafiei/Projects/ecollab/client/src/actions/MyActions.js"],"names":["dispatcher","axios","put","conf","server","getList","model","page","params","token","queryString","Object","keys","map","key","join","get","headers","then","response","dispatch","type","list","data","catch","error","console","log","getMultipleList","fileUpload","id","file","url","formData","FormData","append","config","post","instance","getInstance","removeInstance","setInstance","reason","updateInstance"],"mappings":"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","sourcesContent":["import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\nimport { conf } from '../conf';\nconst server= conf.server;\n//const server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getMultipleList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"MULTIPLE_LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model;\n  const formData = new FormData();\n  formData.append('upload[attached_document]',file)\n  //formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  axios.post(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token, page=1) {\n  axios.get(server + '/'+ model +'/'+id+'?page='+page, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_FAILURE\",\n      instance: error.reason,\n    });\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}