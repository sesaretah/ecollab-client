{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super();\n    this.list = [];\n    this.instance = null;\n    this.klass = null;\n    this.reason = null;\n  }\n\n  listModel(list) {\n    this.list = [];\n    this.klass = list.klass;\n\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n\n      if (i === len - 1) {\n        this.emit(\"got_list\");\n      }\n    }\n\n    if (list.data.length == 0) {\n      this.emit(\"got_list\");\n    }\n  }\n\n  showIntance(instance) {\n    this.klass = instance.klass;\n    this.instance = instance.data;\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance) {\n    this.klass = instance.klass;\n    this.instance = instance.data;\n    this.emit(\"set_instance\");\n  }\n\n  deleteIntance(instance) {\n    this.klass = instance.klass;\n    this.instance = instance.data;\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance) {\n    console.log(instance);\n    this.klass = instance.klass;\n    this.instance = instance.data;\n    this.emit(\"file_posted\");\n  }\n\n  setIntanceFailure(reason) {\n    console.log(reason);\n    this.reason = 'Error';\n    this.klass = '';\n    this.emit(\"set_instance\");\n  }\n\n  getReason() {\n    return this.reason;\n  }\n\n  getIntance() {\n    return this.instance;\n  }\n\n  getList() {\n    return this.list;\n  }\n\n  getListnKlass() {\n    return [this.list, this.klass];\n  }\n\n  getKlass() {\n    return this.klass;\n  }\n\n  handleActions(action) {\n    switch (action.type) {\n      case \"LIST_MODEL_SUCCESS\":\n        {\n          this.listModel(action.list);\n          break;\n        }\n\n      case \"GET_INSTANCE_SUCCESS\":\n        {\n          this.showIntance(action.instance);\n          break;\n        }\n\n      case \"DELETE_INSTANCE_SUCCESS\":\n        {\n          this.deleteIntance(action.instance);\n          break;\n        }\n\n      case \"SET_INSTANCE_SUCCESS\":\n        {\n          this.setIntance(action.instance);\n          break;\n        }\n\n      case \"POST_FILE_SUCCESS\":\n        {\n          this.postFile(action.instance);\n          break;\n        }\n\n      case \"SET_INSTANCE_FAILURE\":\n        {\n          console.log(action);\n          this.setIntanceFailure(action.reason);\n          break;\n        }\n    }\n  }\n\n}\n\nconst modelStore = new ModelStore();\ndispatcher.register(modelStore.handleActions.bind(modelStore));\nexport default modelStore;","map":{"version":3,"sources":["/Users/hosseinshafiei/Projects/ecollab/client/src/stores/ModelStore.js"],"names":["EventEmitter","dispatcher","ModelStore","constructor","list","instance","klass","reason","listModel","i","len","data","length","push","emit","showIntance","setIntance","deleteIntance","postFile","console","log","setIntanceFailure","getReason","getIntance","getList","getListnKlass","getKlass","handleActions","action","type","modelStore","register","bind"],"mappings":"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","sourcesContent":["import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.instance = null;\n    this.klass= null;\n    this.reason = null;\n  }\n\n  listModel(list){\n    this.list = [];\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  setIntanceFailure(reason){\n    console.log(reason)\n    this.reason = 'Error'\n    this.klass = ''\n    this.emit(\"set_instance\");\n  }\n\n  getReason(){\n    return this.reason\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_FAILURE\": {\n        console.log(action)\n        this.setIntanceFailure(action.reason);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n"]},"metadata":{},"sourceType":"module"}