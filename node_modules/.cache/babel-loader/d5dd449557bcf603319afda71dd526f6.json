{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Persian [fa]\n//! author : Ebrahim Byagowi : https://github.com/ebraminio\nimport moment from '../moment';\nvar symbolMap = {\n  1: '۱',\n  2: '۲',\n  3: '۳',\n  4: '۴',\n  5: '۵',\n  6: '۶',\n  7: '۷',\n  8: '۸',\n  9: '۹',\n  0: '۰'\n},\n    numberMap = {\n  '۱': '1',\n  '۲': '2',\n  '۳': '3',\n  '۴': '4',\n  '۵': '5',\n  '۶': '6',\n  '۷': '7',\n  '۸': '8',\n  '۹': '9',\n  '۰': '0'\n};\nexport default moment.defineLocale('fa', {\n  months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n  monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n  weekdays: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n  weekdaysShort: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n  weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /قبل از ظهر|بعد از ظهر/,\n  isPM: function (input) {\n    return /بعد از ظهر/.test(input);\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'قبل از ظهر';\n    } else {\n      return 'بعد از ظهر';\n    }\n  },\n  calendar: {\n    sameDay: '[امروز ساعت] LT',\n    nextDay: '[فردا ساعت] LT',\n    nextWeek: 'dddd [ساعت] LT',\n    lastDay: '[دیروز ساعت] LT',\n    lastWeek: 'dddd [پیش] [ساعت] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'در %s',\n    past: '%s پیش',\n    s: 'چند ثانیه',\n    ss: '%d ثانیه',\n    m: 'یک دقیقه',\n    mm: '%d دقیقه',\n    h: 'یک ساعت',\n    hh: '%d ساعت',\n    d: 'یک روز',\n    dd: '%d روز',\n    M: 'یک ماه',\n    MM: '%d ماه',\n    y: 'یک سال',\n    yy: '%d سال'\n  },\n  preparse: function (string) {\n    return string.replace(/[۰-۹]/g, function (match) {\n      return numberMap[match];\n    }).replace(/،/g, ',');\n  },\n  postformat: function (string) {\n    return string.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, '،');\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}م/,\n  ordinal: '%dم',\n  week: {\n    dow: 6,\n    // Saturday is the first day of the week.\n    doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n  }\n});","map":{"version":3,"sources":["/Users/hosseinshafiei/Projects/ecollab/client/node_modules/moment/src/locale/fa.js"],"names":["moment","symbolMap","numberMap","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","meridiemParse","isPM","input","test","meridiem","hour","minute","isLower","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","preparse","string","replace","match","postformat","dayOfMonthOrdinalParse","ordinal","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Persian [fa]\n//! author : Ebrahim Byagowi : https://github.com/ebraminio\n\nimport moment from '../moment';\n\nvar symbolMap = {\n        1: '۱',\n        2: '۲',\n        3: '۳',\n        4: '۴',\n        5: '۵',\n        6: '۶',\n        7: '۷',\n        8: '۸',\n        9: '۹',\n        0: '۰',\n    },\n    numberMap = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0',\n    };\n\nexport default moment.defineLocale('fa', {\n    months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(\n        '_'\n    ),\n    monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(\n        '_'\n    ),\n    weekdays: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split(\n        '_'\n    ),\n    weekdaysShort: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split(\n        '_'\n    ),\n    weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm',\n    },\n    meridiemParse: /قبل از ظهر|بعد از ظهر/,\n    isPM: function (input) {\n        return /بعد از ظهر/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'قبل از ظهر';\n        } else {\n            return 'بعد از ظهر';\n        }\n    },\n    calendar: {\n        sameDay: '[امروز ساعت] LT',\n        nextDay: '[فردا ساعت] LT',\n        nextWeek: 'dddd [ساعت] LT',\n        lastDay: '[دیروز ساعت] LT',\n        lastWeek: 'dddd [پیش] [ساعت] LT',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'در %s',\n        past: '%s پیش',\n        s: 'چند ثانیه',\n        ss: '%d ثانیه',\n        m: 'یک دقیقه',\n        mm: '%d دقیقه',\n        h: 'یک ساعت',\n        hh: '%d ساعت',\n        d: 'یک روز',\n        dd: '%d روز',\n        M: 'یک ماه',\n        MM: '%d ماه',\n        y: 'یک سال',\n        yy: '%d سال',\n    },\n    preparse: function (string) {\n        return string\n            .replace(/[۰-۹]/g, function (match) {\n                return numberMap[match];\n            })\n            .replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string\n            .replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            })\n            .replace(/,/g, '،');\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}م/,\n    ordinal: '%dم',\n    week: {\n        dow: 6, // Saturday is the first day of the week.\n        doy: 12, // The week that contains Jan 12th is the first week of the year.\n    },\n});\n"]},"metadata":{},"sourceType":"module"}